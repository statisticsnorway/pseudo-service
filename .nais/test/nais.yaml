apiVersion: nais.io/v1alpha1
kind: Application
metadata:
  name: pseudo-service
  namespace: {{team}}
  labels:
    team: {{team}}
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: "6G" # required to stop getting 413 responses
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
spec:
  image: "{{ image }}"  # Injected from the GitHub Action
  port: 10210
  terminationGracePeriodSeconds: 180
  replicas:
    max: 5
    min: 2
  resources:
    requests:
      cpu: 100m
      memory: 2Gi
    limits:
      memory: 6Gi

  ingresses:
    - https://pseudo-service.intern.test.ssb.no
    - https://pseudo-service.test.ssb.no

  accessPolicy:
    outbound:
      rules:
        - application: "stable-id-lookup-service"
          namespace: "reg-freg"
      external:
        - host: "auth.test.ssb.no"
        - host: "cloudkms.googleapis.com"
        - host: "secretmanager.googleapis.com"
        - host: "www.googleapis.com"
        - host: "cloudidentity.googleapis.com"
        - host: "labid.lab.dapla-test-external.ssb.no"
        - host: "labid.lab.dapla-test.ssb.no"
        - host: "labid.lab.dapla-dev-external.ssb.no"

  liveness:
    path: /health/liveness
    port: 10220
  readiness:
    path: /health/readiness
    port: 10220
  startup:
    path: /health/readiness
    port: 10220
  
  prometheus:
    enabled: true
    path: /prometheus
    port: "10220"

  env:
    - name: MICRONAUT_CONFIG_FILES
      value: /conf/bootstrap-test.yml,/conf/application-test.yml,/conf/protected/app-roles.yml
    - name: LOGBACK_CONFIGURATION_FILE
      value: /conf/logback-test.xml

  envFrom:
    - secret: pseudo-key-config

  filesFrom:
    - configmap: pseudo-application-test-configmap
      mountPath:  /conf
    - configmap: pseudo-roles-test-configmap
      mountPath:  /conf/protected

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: pseudo-application-test-configmap
  namespace: {{team}}
  labels:
    team: {{team}}
data:
  bootstrap-test.yml: |-
    micronaut:
      application:
        name: pseudo-service
      config-client:
        enabled: true
    gcp:
      project-id: staging-dapla-pseudo-6485

  application-test.yml: |-
    micronaut:
      application:
        name: pseudo-service
      server:
        port: 10210
        cors.enabled: true
        idle-timeout: 60m
        read-idle-timeout: 60m
        write-idle-timeout: 60m
        thread-selection: AUTO
        max-request-size: 2gb
        multipart:
          max-file-size: 2gb

      netty:
        event-loops:
          other:
            num-threads: 100
            prefer-native-transport: true

      http:
        client:
          event-loop-group: other
          read-timeout: 60s

        services:
          sid-service:
            url: 'http://stable-id-lookup-service.reg-freg'
            path: '/v2'
            read-timeout: 60s
            pool:
              enabled: true
              max-connections: 50
            health-check: true
            health-check-interval: 15s
            health-check-uri: /health/ready
          cloud-identity-service:
            url: 'https://cloudidentity.googleapis.com'
            path: '/v1'
            read-timeout: 60s

      caches:
        secrets:
          expire-after-access: 15m
        cloud-identity-service-cache:
          expire-after-write: 1m
      
      metrics:
        sensitive: false
        enabled: true
        tags:
          application: ${micronaut.application.name}
        export:
          prometheus:
            enabled: true
            descriptions: true
            step: PT1M

      router:
        static-resources:
          swagger:
            paths: classpath:META-INF/swagger
            mapping: /api-docs/**
          swagger-ui:
            paths: classpath:META-INF/swagger/views/swagger-ui
            mapping: /api-docs/swagger-ui/**
          rapidoc:
            paths: classpath:META-INF/swagger/views/rapidoc
            mapping: /api-docs/rapidoc/**
          redoc:
            paths: classpath:META-INF/swagger/views/redoc
            mapping: /api-docs/redoc/**

      security:
        enabled: true
        intercept-url-map:
          - pattern: /api-docs/**
            httpMethod: GET
            access: isAnonymous()
          - pattern: /health/**
            http-method: GET
            access: isAnonymous()
          - pattern: /metrics/**
            http-method: GET
            access: isAnonymous()
          - pattern: /prometheus/**
            http-method: GET
            access: isAnonymous()
          - pattern: /**
            access: isAuthenticated()
          
        token:
          name-key: email
          jwt:
            signatures:
              jwks-client:
                http-client:
                  enabled: false
              jwks:
                  keycloak-nais-test:
                    url: 'https://auth.test.ssb.no/realms/ssb/protocol/openid-connect/certs'
                  keycloak-nais-dev:
                    url: https://auth-play.test.ssb.no/realms/ssb/protocol/openid-connect/certs
                  google:
                    url: 'https://www.googleapis.com/oauth2/v3/certs'
                  lab-id-north1-test:
                    url: 'https://labid.lab.dapla-test-external.ssb.no/jwks'
                  lab-id-west4-test:
                    url: 'https://labid.lab.dapla-test.ssb.no/jwks'
                  lab-id-north1-dev:
                    url: 'https://labid.lab.dapla-dev-external.ssb.no/jwks'

        basic-auth:
          enabled: false

    endpoints:
      all:
        port: 10220
      prometheus:
        sensitive: false
      info:
        enabled: true
        sensitive: false
      health:
        sensitive: false
        details-visible: ANONYMOUS
        monitor:
          enabled: true

    logger:
      levels:
        io.micronaut.security: INFO
        no.ssb.dlp.pseudo.service: INFO
        io.micronaut.security.token.jwt.validator: DEBUG

    services:
      secrets:
        impl: GCP

    gcp:
      kms:
        key-uris:
          - ${PSEUDO_KEK_URI}

      http:
        client:
          filter:
            project-id: 'staging-dapla-pseudo-6485'
            services:
              cloud-identity-service:
                audience: "https://www.googleapis.com/auth/cloud-identity.groups.readonly"

    pseudo.secrets:
      ssb-common-key-1:
        id: ${SSB-COMMON-KEY-1-KEY-ID}
        type: TINK_WDEK
      ssb-common-key-2:
        id: ${SSB-COMMON-KEY-2-KEY-ID}
        type: TINK_WDEK
      papis-common-key-1:
        id: ${PAPIS-COMMON-KEY-1-KEY-ID}
        type: TINK_WDEK

    export:
      default-target-root: gs://ssb-staging-dapla-pseudo-service-data-export/felles

    sid.mapper.partition.size: 100000
